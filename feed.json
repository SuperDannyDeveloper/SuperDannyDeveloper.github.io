{"title":"皮卡丘♪～(´ε｀　)","description":"90后，真名吕昌辉。大家都叫我皮卡丘、DD、CTO（其实我都有点惭愧被这么叫）。我有一颗稚(禽)嫩(兽)的心-希望能与IT行业的牛人学习！","language":"zh-CN","link":"superdanny.link","pubDate":"Fri, 10 Mar 2017 08:42:00 GMT","lastBuildDate":"Fri, 24 Mar 2017 07:54:54 GMT","generator":"hexo-generator-json-feed","webMaster":"SuperDanny","items":[{"title":"UITableView/UICollectionView使用技巧","link":"superdanny.link/2017/03/10/iOS-UITableView-UICollectionView-Skill/","description":"Header/Footer高度、悬停设置高度设置有时候我们需要设置 TableView 的头部和尾部的间距，如果 TableView 的 Style 是 UITableViewStylePlain 的话，头部尾部的高度只需要在代理里面设置高度就行。 但如果是 UITableViewStyleGrouped 类型，这个时候 TableView 是的头部以及尾部高度的设置需要麻烦一些。因为单纯在代理里面设置高度是无效的。实现代码如下： 12345678910111213141516171819- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section &#123; return 0.01f;&#125;- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section &#123; UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, 1)]; view.backgroundColor = [UIColor clearColor]; return view;&#125;- (CGFloat)tableView:(UITableView *)tableView heightForFooterInSection:(NSInteger)section &#123; return 10;&#125;- (UIView *)tableView:(UITableView *)tableView viewForFooterInSection:(NSInteger)section &#123; UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, 0, kScreenWidth, 1)]; view.backgroundColor = [UIColor clearColor]; return view;&#125; 通过上面的代码我们就可以正确的设置高度，同时需要注意的是，UITableViewStyleGrouped时，不能设置 TableView 的tableFooterView、tableHeaderView，不然高度设置会无效。 悬停TableView的悬停功能只有在 Style 是 UITableViewStylePlain 的时候才有。如果有这么一种需求，就是需要有Header悬停，同时每个section之间需要有间隔。效果如下： 1234567891011121314151617181920212223242526272829303132333435363738394041- (CGFloat)tableView:(UITableView *)tableView heightForHeaderInSection:(NSInteger)section &#123; return kHeaderHeight+9;&#125;- (UIView *)tableView:(UITableView *)tableView viewForHeaderInSection:(NSInteger)section &#123; BillListModel *model = _sectionArr[section]; UIView *header = (&#123; UIView *bgView = [[UIView alloc] initWithFrame:CGRectMake(0, 0, KScreenWidth, kHeaderHeight+9)]; bgView.backgroundColor = [UIColorTools colorWithTheme:UIColorThemeAppBgColor]; UILabel *titleLab = [[UILabel alloc] initWithFrame:CGRectMake(0, 9, KScreenWidth, kHeaderHeight)]; titleLab.backgroundColor = [UIColorTools colorWithTheme:UIColorThemeWhite]; titleLab.textColor = [UIColorTools colorWithTheme:UIColorThemeBlack]; titleLab.text = model.time; [bgView addSubview:titleLab]; UIImageView *lineHBottom = [[UIImageView alloc] initWithFrame:CGRectMake(0.0, titleLab.mj_max_y - 0.5, KScreenWidth, 0.5)]; lineHBottom.backgroundColor = [UIColorTools colorWithTheme:UIColorThemeSeparatorColor]; [bgView addSubview:lineHBottom]; bgView; &#125;); return header;&#125;- (void)scrollViewDidScroll:(UIScrollView *)scrollView &#123; if (scrollView == _tableView) &#123; UITableView *tableview = (UITableView *)scrollView; CGFloat sectionHeaderHeight = kHeaderHeight; CGFloat sectionFooterHeight = 9; CGFloat offsetY = tableview.contentOffset.y; if (offsetY &gt;= 0 &amp;&amp; offsetY &lt;= sectionFooterHeight) &#123; tableview.contentInset = UIEdgeInsetsMake(-offsetY, 0, -sectionHeaderHeight, 0); &#125; else if (offsetY &gt;= sectionFooterHeight &amp;&amp; offsetY &lt;= tableview.contentSize.height - tableview.frame.size.height - sectionHeaderHeight) &#123; tableview.contentInset = UIEdgeInsetsMake(-sectionFooterHeight, 0, 0, 0); &#125; else if (offsetY &gt;= 0 &amp;&amp; tableview.contentSize.height &gt;= tableview.contentSize.height) &#123; tableview.contentInset = UIEdgeInsetsMake(-sectionFooterHeight, 0, 0, 0); &#125; &#125;&#125; CollectionView的悬停功能只有在 Style 是 UITableViewStylePlain 的时候才有。如果有这么一种需求，就是需要有Header悬停，同时每个section之间需要有间隔。效果如下： 滚动监听 1.UIScrollView 减速 可能通过decelerationRate的属性来设置，它的值域是（0.0，1.0）,当decelerationRate设置为0.1时，当手指touch up时就会很慢的停下来。 2.UIScrollView 如何判断停止滑动 这里停止滑动的意思要明确一下，有两种， 第一指手指停止滑动，因为手指停止滑动ScrollView。 当手指停止滑动时,iOS会调UIScrollView的delegate (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate如果decelerate还为NO时，它最终停下,否则它还没最终停下 第二指ScrollView停止滑动，指的滚动条完全停止下来。 当decelerate = true时，iOS才会调UIScrollView的delegate (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView 那UIScrollView真正停止滑动，应该怎么判断呢解决方法是这样的，首先在 (void)scrollViewDidEndDragging:(UIScrollView *)scrollView willDecelerate:(BOOL)decelerate {if(!decelerate){ //OK,真正停止了，do something}}然后 (void)scrollViewDidEndDecelerating:(UIScrollView *)scrollView { //OK,真正停止了,do something} 3.消息传递 当手指触摸后, scroll view会暂时拦截触摸事件,使用一个计时器,假如在计时器到点后,没有发生手指移动事件,那么,scroll view发送tracking events到被点击的subview假如在计时器到点前,发生了移动事件,那么 scroll view 取消tracking自己发生滚动 子类可以重载touchesShouldBegin:withEvent:inContentView: 决定自己是否接收touch事件pagingEnabled当值是YES,会自动滚动到subview的边界,默认是NOtouchesShouldCancelInContentView: 开始发送tracking messages消息给subview的时候调用这个方法,决定是否发送tracking messages消息到subview,假如返回NO,发送,YES则不发送假如 canCancelContentTouches属性是NO,则不调用这个方法来影响如何处理滚动手势 再一次感谢您花费时间阅读这篇文章！ 微博： @Danny_吕昌辉博客： SuperDanny","pubDate":"Fri, 10 Mar 2017 08:42:00 GMT","guid":"superdanny.link/2017/03/10/iOS-UITableView-UICollectionView-Skill/","category":"移动端"},{"title":"苹果应用内购指南资料","link":"superdanny.link/2017/03/07/iOS-In-App-Purchase/","description":"最近想自己搞一个APP，就顺便查阅了相关苹果资料。这里记录一下，方便以后查阅。 iTunes Connect 的 In-App Purchase 配置指南 iOS 和 OS X 中的 In-App Purchase 使用入门 将 In-App Purchase 添加到您的 iOS 和 Mac 应用程序中 再一次感谢您花费时间阅读这篇文章！ 微博： @Danny_吕昌辉博客： SuperDanny","pubDate":"Tue, 07 Mar 2017 07:53:00 GMT","guid":"superdanny.link/2017/03/07/iOS-In-App-Purchase/","category":"移动端"},{"title":"为自己的 APP 瘦身","link":"superdanny.link/2017/03/03/App-Thinning/","description":"问题每次产品迭代的次数越多，你就会发现安装包的大小也会随之增大，因为有很多废弃的代码，UI素材堆积在项目里面，导致了冗余。这边按照自己亲身经验对APP进行瘦身。","pubDate":"Fri, 03 Mar 2017 06:17:00 GMT","guid":"superdanny.link/2017/03/03/App-Thinning/","category":"移动端"},{"title":"iOS数据库操作之Realm初探","link":"superdanny.link/2017/02/22/iOS-Realm/","description":"前提以前了解过 Realm 这个第三方数据库操作，但是没有深入的了解。这两天有空花了点时间看了一下文档，这边根据文档摘抄记录一下，方便以后使用到可以查阅。","pubDate":"Wed, 22 Feb 2017 07:44:00 GMT","guid":"superdanny.link/2017/02/22/iOS-Realm/","category":"iOS端"},{"title":"重装 Mac 系统","link":"superdanny.link/2017/02/05/Reinstall-the-MacOS/","description":"今天公司从保险柜里面拿出两台笔记本让我修理下，顿时心里一万只草泥马奔腾而过，我是搞开发的，不是修电脑的。。。但是没办法，谁叫我比较好说话，妥协了。。。","pubDate":"Sun, 05 Feb 2017 08:36:00 GMT","guid":"superdanny.link/2017/02/05/Reinstall-the-MacOS/","category":"Mac端"},{"title":"如何正确设置导航栏透明度","link":"superdanny.link/2017/01/04/iOS-NavigationBar-Alpha/","description":"需求很多时候，希望导航栏能够透明，同时item不透明，看了网上的做法，参测不齐。这里作为过来人自己走过的坑有必要说说。","pubDate":"Wed, 04 Jan 2017 15:12:00 GMT","guid":"superdanny.link/2017/01/04/iOS-NavigationBar-Alpha/","category":"移动端"},{"title":"关于Autolayout制作动画的坑","link":"superdanny.link/2016/12/22/iOS-Autolayout-and-animation/","description":"需求一直以来iOS的 Autolayout 都是一个很不错的功能，结合第三方 Masonry 可以节省很多工作成本。但是如果使用 Autolayout 来制作动画，那么就需要注意一下。不然就会像我一样，遇坑踩坑，越陷越深。","pubDate":"Thu, 22 Dec 2016 15:13:00 GMT","guid":"superdanny.link/2016/12/22/iOS-Autolayout-and-animation/","category":"移动端"},{"title":"NSDecimalNumber实现金融类等高精度计算(转改)","link":"superdanny.link/2016/12/14/iOS-High-precision-calculation/","description":"需求平时我们进行数值计算时，使用常用的数据类型进行加减乘除是不会有什么问题的，但是一旦涉及精度高的，特别是计算金额时，就特别容易踩坑，本人就经历过两次，回想起来血淋淋的场面依然历历在目。 苹果其实很早就推出过计算高精度类型的API。只不过我没发现。感觉自己还是too young too simple。话不多说，直奔主题。","pubDate":"Wed, 14 Dec 2016 09:43:00 GMT","guid":"superdanny.link/2016/12/14/iOS-High-precision-calculation/","category":"移动端"},{"title":"CocoaPods之repo换源和gem换源","link":"superdanny.link/2016/12/04/CocoaPods-update-gem-and-repo/","description":"由于淘宝gem源维护困难，所以已经不再维护。目前已经有了替代方案。 安装CocoaPods之前的CocoaPods安装过程已经提及过，这里就不再累赘。","pubDate":"Sun, 04 Dec 2016 07:21:00 GMT","guid":"superdanny.link/2016/12/04/CocoaPods-update-gem-and-repo/","category":"Mac端"},{"title":"2016，我的年终总结-写给自己的一封信","link":"superdanny.link/2016/11/26/2016-Year-end-summary/","description":"今年已经是我第二个年头写总结了，相比去年的工作总结，今年的总结，我侧重说说自己一年来的感悟，工作上的事情会涉及比较少。","pubDate":"Sat, 26 Nov 2016 11:49:00 GMT","guid":"superdanny.link/2016/11/26/2016-Year-end-summary/","category":"年终总结"},{"title":"Xcode8，你为什么这么坑","link":"superdanny.link/2016/09/26/Xcode8-pit/","description":"开启吐槽模式为了迎合Xcode8所带来的更新，我是惊喜万分(奔溃至极)。丝毫不敢怠慢，生怕跟不上入坑的队伍😂","pubDate":"Mon, 26 Sep 2016 08:02:00 GMT","guid":"superdanny.link/2016/09/26/Xcode8-pit/","category":"Mac端"},{"title":"如何优雅的使用Xcode8或iOS10 SDK","link":"superdanny.link/2016/09/16/How-to-use-Xcode8-or-iOS10_SDK/","description":"需求由于Xcode8 不再支持第三方插件，对于大部分开发者来说是一个噩耗！我也不例外，为了能够找到解决方案，我出去外面查阅了很多资料，总的来说有两种方案，一种是重签名Xcode8，另外一种是变相使用Xcode7.3.1运行iOS10 SDK。目前我采用的是方案二。","pubDate":"Fri, 16 Sep 2016 15:59:00 GMT","guid":"superdanny.link/2016/09/16/How-to-use-Xcode8-or-iOS10_SDK/","category":"Mac端"},{"title":"升级CocoaPods后存在的问题","link":"superdanny.link/2016/05/16/CocoaPods-concrete-target/","description":"问题今天由于需要，去升级了CocoaPods的版本，更新版本完成之后，在执行pod install指令时出现了问题。 12[!] The dependency `AFNetworking` is not used in any concrete target.The dependency `SDWebImage` is not used in any concrete target. 根据提示，是说我没有给这些第三方库指明对应的target。Podfile升级之后到最新版本，pod里的内容必须明确指出所用第三方库的target，否则会出现The dependency `` is not used in any concrete target这样的错误。","pubDate":"Mon, 16 May 2016 06:19:00 GMT","guid":"superdanny.link/2016/05/16/CocoaPods-concrete-target/","category":"Mac端"},{"title":"iOS修改导航堆栈视图","link":"superdanny.link/2016/04/26/iOS-Change-navigation-stack/","description":"需求有时候我们需要在视图跳转时，或者某些操作时需要将导航堆栈中的某个视图或多个视图移除堆栈中，目的是为了让返回过程中不会经过需要移除的视图。","pubDate":"Tue, 26 Apr 2016 09:46:00 GMT","guid":"superdanny.link/2016/04/26/iOS-Change-navigation-stack/","category":"移动端"},{"title":"CocoaPods切换国内镜像源以及镜像源制作","link":"superdanny.link/2016/04/20/Change-CocoaPods-Source/","description":"需求很多时候我们需要借助CocoaPods管理第三方开源类库，但是由于国内开发者直接使用CocoaPods是经常速度缓慢导致更新或者安装时候需要等待非常长的时间。","pubDate":"Wed, 20 Apr 2016 12:13:00 GMT","guid":"superdanny.link/2016/04/20/Change-CocoaPods-Source/","category":"Mac端"},{"title":"swift中的枚举,结构体和类(简译)","link":"superdanny.link/2016/03/09/Swift-Getting-to-Know-Enums-Structs-and-Classes/","description":"前言本文将对阅读的国外文章进行自己的理解翻译，有哪些不对的地方还望指正。","pubDate":"Wed, 09 Mar 2016 01:40:00 GMT","guid":"superdanny.link/2016/03/09/Swift-Getting-to-Know-Enums-Structs-and-Classes/","category":"移动端"},{"title":"Apple Pay 入门（转）","link":"superdanny.link/2016/02/20/iOS-Apple-Pay/","description":"Pay官方参考资料 概述利用 Apple Pay，用户可以在您的 App 中轻松安全地购买实物商品和服务。客户更喜欢使用 Apple Pay，因为他们在购物时无需输入账单、送货和联系人详细信息。而且，Apple Pay 具有更高的安全性，能让客户和开发者安心使用。Apple 不会存储或共享客户的实际信用卡和借记卡卡号，因此商家和 App 开发者无需负责管理和保护实际的信用卡和借记卡卡号。进一步了解 Apple Pay 的安全与隐私政策。","pubDate":"Sat, 20 Feb 2016 05:30:00 GMT","guid":"superdanny.link/2016/02/20/iOS-Apple-Pay/","category":"移动端"},{"title":"iOS开发证书\"此证书的签发者无效\"解决方法","link":"superdanny.link/2016/02/15/iOS-Certificate-has-an-invalid-issuer/","description":"前言哎，每次过完节都要有一个坑给自己跳。逃不过这个魔爪。这不，一过完春节，回来就发现公司证书出现”此证书的签发者无效”。","pubDate":"Mon, 15 Feb 2016 02:13:00 GMT","guid":"superdanny.link/2016/02/15/iOS-Certificate-has-an-invalid-issuer/","category":"移动端"},{"title":"iOS推送的那些事","link":"superdanny.link/2016/02/02/iOS-Apple-Push-Notification-Service/","description":"关于推送关于苹果的推送网上已经有非常多的资源讲解，我在这里就不再累赘。直接切入主题，讲讲如何模拟推送以及处理推送消息。在进入主题之前，我先说几个关键流程： 创建Push SSL Certification(推送证书) iOS客户端注册Push功能并获得DeviceToken 使用Provider向APNS发送Push消息 iOS客户端接收处理由APNS发来的消息","pubDate":"Tue, 02 Feb 2016 05:40:00 GMT","guid":"superdanny.link/2016/02/02/iOS-Apple-Push-Notification-Service/","category":"Mac端,移动端"},{"title":"iOS图片压缩上传","link":"superdanny.link/2016/01/28/iOS-Upload-Image/","description":"需求很多时候我们上传图片经常遇到一些问题，要不就是图片质量变差，要不就是图片太大等等问题。这里，我找到了一个算是目前比较符合需求的解决方案。在原有基础上增加了动态压缩系数，改写成Swift版本，最底下贴出OC版本。 实现思路先调整分辨率，分辨率可以自己设定一个值，大于的就缩小到这分辨率，小余的就保持原本分辨率。然后再根据图片最终大小来设置压缩比，比如传入maxSize = 30KB，最终计算大概这个大小的压缩比。基本上最终出来的图片数据根据当前分辨率能保持差不多的大小同时不至于太模糊，跟微信，微博最终效果应该是差不多的，代码仍然有待优化！","pubDate":"Thu, 28 Jan 2016 03:55:00 GMT","guid":"superdanny.link/2016/01/28/iOS-Upload-Image/","category":"移动端"},{"title":"iOS获取设备IP地址","link":"superdanny.link/2016/01/27/iOS-get-device-ip-address/","description":"以前做过获取设备IP地址的功能，但是由于当时代码管理不当，很多代码已经遗失，现在只能重新过一遍，也让自己更有基情激情的学习。网上关于这方面的文章很多，但是找到自己真正需要的却不容易，经过几番周折。终于在著名的stackoverflow上面找到了我想要的答案。","pubDate":"Wed, 27 Jan 2016 06:30:00 GMT","guid":"superdanny.link/2016/01/27/iOS-get-device-ip-address/","category":"移动端"},{"title":"如何从项目中移除CocoaPods(译)","link":"superdanny.link/2016/01/18/Remove-CocoaPods-from-project/","description":"原文地址：How to remove CocoaPods from a project? 使用CocoaPod管理第三方代码是非常方便的，但是当不需要使用的时候，删除起来就非常麻烦，这里我根据国外朋友的方案翻译了一下。不足之处望见谅。","pubDate":"Mon, 18 Jan 2016 09:44:00 GMT","guid":"superdanny.link/2016/01/18/Remove-CocoaPods-from-project/","category":"Mac端"},{"title":"OS X El Capitan系统下使用brew报错问题","link":"superdanny.link/2016/01/18/Brew-OSX_EI-error/","description":"今天想使用brew下载个工具，发现无端端报错了，不能正常使用。顿时心血来潮——又有博客写了😄 因为从10.11开始，对几个重要目录的权限苹果有了新的限制，特别是/usr目录，所以官方有一个解决方法：El_Capitan_and_Homebrew","pubDate":"Mon, 18 Jan 2016 08:36:00 GMT","guid":"superdanny.link/2016/01/18/Brew-OSX_EI-error/","category":"Mac端"},{"title":"iTunes Connect(二) —— 应用上架过程中App状态指南","link":"superdanny.link/2016/01/15/iOS-iTunes_Connect_2-App-Statuses/","description":"关于 app 状态无论 app 版本列于 iTunes Connect 中的哪个位置，您都可以看到版本的状态（如Waiting For Upload（正在等待上传）或Ready for Sale（可以销售））或状态指示器（如 ， 或 ）。状态会立即告知您是否需要关注您的 app： 红色状态指示器表示您需要先执行某个操作，然后您的 app 才能在商店中提供。 黄色状态指示器表示正在进行某个进程（由您或 Apple 控制）。 绿色状态指示器表示 app 已在商店中提供。","pubDate":"Fri, 15 Jan 2016 03:56:00 GMT","guid":"superdanny.link/2016/01/15/iOS-iTunes_Connect_2-App-Statuses/","category":"移动端,Mac端"},{"title":"iTunes Connect(一) —— iOS应用上架到AppStore","link":"superdanny.link/2016/01/13/iOS-iTunes_Connect_1-Uploading-APP-to-Appstore/","description":"前言 基于本人对苹果的开发流程的渴望。所以很多东西一旦自己经历了，或者是别人经常会用到的时候，我就喜欢研究。并将自己以及别人的心得记录下来，方便自己及他人学习。 本篇，我将按照自己的思路对iOS应用上架整体流程进行讲解，本文也是iOS证书申请、开发、打包、排查等系列教学中的一部分，欢迎各位朋友扩展学习。 博文回顾在前面我完善了我的iOS开发者证书的那些事文章，开篇就讲到了关于发布时的必备条件，在这里我就不再累赘。直接进入本文主题。","pubDate":"Wed, 13 Jan 2016 11:13:00 GMT","guid":"superdanny.link/2016/01/13/iOS-iTunes_Connect_1-Uploading-APP-to-Appstore/","category":"移动端,Mac端"}]}